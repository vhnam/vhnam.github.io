---
import { type CollectionEntry, getCollection } from "astro:content";
import type { MarkdownHeading } from "astro";

import { sortByDate } from "../../utils/sortByDate";

import PostLayout from "../../layouts/PostLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("tutorial");
  const numberOfPosts = posts.length;

  return posts.sort(sortByDate).map((post, index) => ({
    params: { slug: post.slug },
    props: {
      ...post,
      prevPost: index + 1 === numberOfPosts ? null : posts[index + 1],
      nextPost: index === 0 ? null : posts[index - 1],
    },
  }));
}

type Props = CollectionEntry<"tutorial"> & {
  id: CollectionEntry<"tutorial">["id"];
  data: CollectionEntry<"tutorial">["data"];
  headings: MarkdownHeading[];
  nextPost: CollectionEntry<"tutorial">;
  prevPost: CollectionEntry<"tutorial">;
};

const { nextPost, prevPost, data, render } = Astro.props;
const { title, description, cover, pubDate, tags } = data;
const { Content, headings } = await render();
---

<PostLayout
  title={title}
  description={description}
  cover={cover}
  category="tutorials"
  headings={headings}
  pubDate={pubDate}
  tags={tags}
  {nextPost}
  {prevPost}
>
  <Content />
</PostLayout>
